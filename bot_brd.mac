|**
----------------------------
BOT_BRD.mac
----------------------------
This macro is configured for use by the BARD class
Modify the BOT_CLS_CHARNAME.ini file for use by a specific toon
This was written ground up for usage with xiris's bots.
It heavily relies on mq2melee for specific class functionality.

Usage: /mac bot_brd ${_tank1Name} ${_tank2Name} ${_healPoint} ${_assistArgs}

______________________________________________
REVISION HISTORY
    05.08.22	xiris	INITIAL REVISION
______________________________________________
REQUIRED PLUGINS
    mq2melee
    mq2cast
    mq2eqbc
    mq2debuffs
    mq2moveutils
    
______________________________________________
REQUIRED INCLUDES  
	xiris_common/xiris_common.inc
**|


#include xiris_common/xiris_common.inc

#Turbo 40
Sub InitEvents_Class
	|/call RegisterClassEvents Events_BRD 0
/return

Sub Events_BRD
/return 

Sub Main(string _tank1Name, string _tank2Name, string _tank3Name, int _healPoint, string _assistArgs)
	
	
	/echo You are now in xiris_bot_${Me.Class.ShortName}.mac

	|-- initialize the common xbot libraries
	/call xbot_initialize ${_tank1Name} ${_tank2Name} ${_tank3Name} ${_healPoint} ${_assistArgs}

	|-- initialize the macro specific libraries
	/call variant_initialize

	|-- report my status
	/dgt [${Me.Class.ShortName}] ${Me.Name} ${str_action} >> ${Spawn[${_tank1Name}].CleanName} <<

	|-- target the MT
	/call TrueTarget ${int_MTID}
	
	|**
	----------------------------
	Main Loop
	----------------------------
	Runs in order listed,
	if adding any routine add the call here
	----------------------------
	**|

	:MainLoop
		/if (${Me.Hovering} || ${Window[tradewnd].Open} || ${Window[lootwnd].Open}) /goto :MainLoop
		|-- Check all Events
		/call RunAllEvents

		|-- Check to make sure MT is still alive, if not, find another
		/call chkMTAlive FALSE
		
		|-- Check Offtanking Situation (xiris_offtanking.inc)
		/call chkOffTanking
		
		|-- Check to see if self needs to be cured (xiris_curing.inc)
		/call chkNeedCure
		
		|-- Check Auto Assist if its on
		/if (${bln_autoAssist}) /call chkAutoAssist

		/if (${bln_engaged}) {
			|-- check engaged events
			/call RunRaidEvents
			/call RunClassEvents

			|-- verify target status
			/call chkTargetStatus

			|-- debuff lib
			|/call chkDebuffsOnSingleTarget ${int_targetID}

			|-- dps library (caster)
			/call RunRaidEvents
    		/call RunClassEvents
			/call chkDOT
			/call chkNuke
			
			|-- std library (burns/aa/clicks)
			/call RunRaidEvents
			/call RunClassEvents
			/call chkAAs
			/call chkBurn
			/call chkClicks
		} else {
			|-- check utilities, includes: sit,loot,leash (out of combat only) and only once every 10 seconds
			/if (!${timer_check_utilities}) /call chkUtils
			/if (!${timer_check_downshits}) /call chkDownshits
			/if (!${timer_check_loot} && ${bln_lootAuto}) /call chkLoot
		}

	|-- start again	
    /goto :MainLoop
/return



|**
 ----------------------------
 Utility Checking
 ----------------------------
 Checks the utilities such as fail states (GM, Lobby, etc)
 Checks to see if we should med, loot, leash
 ----------------------------
**|
Sub chkUtils
	|-- Standard Methods
	/call chkSit
	/varset timer_check_utilities 20s
	
/return



|**
 ----------------------------
 INITIALIZATION Sub
 ----------------------------
 Initialization of values for this specific macro variant
 ----------------------------
**| 
Sub variant_initialize	
	|--Set Aggro
	/if (${str_tankName1.NotEqual[${Me.Name}]} && ${str_tankName2.NotEqual[${Me.Name}]}) {
		/melee aggro=0	
	} else {
		/melee aggro=1
	}
	
	|-- set up default vars
	/declare    str_action				string	outer	Assisting	
	
	|--Bard Specific Settings
	|--Medley
	/declare    str_currentMedley	    string	outer	melee

	/memspellset default
	/cecho \at${Me.Class.Name} Loaded: MT: ${str_MTName}(${int_MTID}) HealPoint:${healPoint} ST: ${str_tankName2}(${int_STID})
	/call InitEvents_Class
/return



